pipeline {
    agent any

    environment {
        GOOGLE_CLOUD_PROJECT = 'glass-mantra-447916-d1'  // Ton ID de projet Google Cloud
        DOCKER_IMAGE_NAME = 'gcr.io/${GOOGLE_CLOUD_PROJECT}/my-image'  // Nom de l'image Docker
        IMAGE_TAG = 'latest'  // Tag de l'image (par exemple 'latest')
        IMAGE_ID = 'e0c46393cd74'  // ID de l'image Docker
        SERVICE_ACCOUNT_EMAIL = 'deploydockerimage@glass-mantra-447916-d1.iam.gserviceaccount.com'  // Email du compte de service
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Construire l'image Docker localement
                    docker.build("${DOCKER_IMAGE_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Push Docker Image to Google Container Registry') {
            steps {
                script {
                    // Authentification avec la clé du compte de service
                    withCredentials([file(credentialsId: 'google-cloud-key', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                        sh '''
                            # Authentifier gcloud avec le fichier de clé
                            gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                            
                            # Configurer le projet Google Cloud
                            gcloud config set project $GOOGLE_CLOUD_PROJECT

                            # Se connecter à Google Container Registry
                            gcloud auth configure-docker

                            # Pousser l'image Docker vers Google Container Registry
                            docker push $DOCKER_IMAGE_NAME:$IMAGE_TAG
                        '''
                    }
                }
            }
        }

        stage('Deploy to Google Cloud Run') {
            steps {
                script {
                    // Déployer l'image Docker sur Google Cloud Run
                    withCredentials([file(credentialsId: 'google-cloud-key', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                        sh '''
                            # Authentifier gcloud avec la clé
                            gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

                            # Déployer l'image sur Cloud Run
                            gcloud run deploy my-service \
                                --image $DOCKER_IMAGE_NAME:$IMAGE_TAG \
                                --platform managed \
                                --region us-central1 \
                                --allow-unauthenticated
                        '''
                    }
                }
            }
        }
    }
}
