pipeline {
    agent any

    environment {
        PROJECT_ID = 'glass-mantra-447916-d1'  // ID du projet GCP
        GKE_CLUSTER = 'autopilot-cluster-1'    // Nom du cluster GKE
        GKE_REGION = 'africa-south1'           // Région du cluster
        IMAGE_NAME = 'my-image'                // Nom de l'image Docker déjà construite
    }

    stages {
        stage('Authenticate to GCP') {
            steps {
                // Utilisation du credential de type fichier
                withCredentials([file(credentialsId: 'cloud', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
    sh 'gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS'
}

            }
        }

        stage('Push Docker Image to GCR') {
            steps {
                // Authentifier Docker auprès de GCR
                sh 'gcloud auth configure-docker'
                // Pousser l'image vers Google Container Registry
                sh "docker tag ${IMAGE_NAME} gcr.io/${PROJECT_ID}/${IMAGE_NAME}"
                sh "docker push gcr.io/${PROJECT_ID}/${IMAGE_NAME}"
            }
        }

        stage('Configure kubectl') {
            steps {
                sh "gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION"
            }
        }

        stage('Deploy to GKE') {
            steps {
                // Appliquer le fichier de déploiement Kubernetes
                sh "kubectl apply -f k8s/deployment.yaml"
                // Mettre à jour l'image dans le déploiement Kubernetes
                sh "kubectl set image deployment/my-app my-app=gcr.io/${PROJECT_ID}/${IMAGE_NAME}"
            }
        }
    }
}
